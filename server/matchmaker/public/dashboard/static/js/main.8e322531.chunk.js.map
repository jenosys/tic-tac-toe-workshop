{"version":3,"sources":["api.ts","components/GameModal.tsx","utils.ts","pages/GamePage.tsx","containers/GamePageContainer.tsx","components/MainMenu.tsx","containers/MainMenuContainer.tsx","components/ServerList.tsx","pages/ServerPage.tsx","containers/ServerPageContainer.tsx","pages/LeaderboardPage.tsx","store/modules/data.ts","store/modules/servers.ts","store/modules/users.ts","App.tsx","store/modules/index.ts","index.tsx"],"names":["matchServer","window","location","hostname","startsWith","host","instance","axios","create","baseURL","concat","timeout","headers","api","ioConnect","_ref","onUpdateUsers","onUpdateServers","onUpdateVars","socket","io","transports","on","console","log","users","servers","vars","requestMatching","username","post","activeDediServer","addr","get","blockDediServer","desireIdleServerCount","number","clientUrl","useStyles","makeStyles","theme","createStyles","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","progress","DialogTitle","children","onClose","classes","react_default","a","createElement","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","Close_default","requestKey","SimpleDialog","props","open","_React$useState","React","useState","_React$useState2","Object","slicedToArray","phase","setPhase","_React$useState3","_React$useState4","delay","setDelay","_React$useState5","_React$useState6","elapsedTime","setElapsedTime","_React$useState7","_React$useState8","serverAddr","setServerAddr","useEffect","closeMe","event","data","handleClose","addEventListener","removeEventListener","useInterval","key","length","result","characters","charactersLength","i","charAt","Math","floor","random","utils","then","response","content","style","left","transform","CircularProgress","size","align","iframe","url","replace","width","height","frameBorder","scrolling","Dialog","aria-labelledby","disableBackdropClick","disableEscapeKeyDown","maxWidth","fullWidth","GameModal_DialogTitle","id","Box","bgcolor","zoom","display","verticalAlign","marginLeft","marginRight","Grid","container","justify","alignItems","GameModal","_React$useState9","_React$useState10","setOpen","Button","useStyles1","flexShrink","text","secondary","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","disabled","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","max","toolbar","objectSpread","justifyContent","mixins","flexGrow","accountPaper","tablePaper","marginTop","table","minWidth","tableWrapper","overflowX","GamePage","setPage","setRowsPerPage","rows","user","sort","b","score","emptyRows","min","Paper","component","components_GameModal","Table","TableBody","slice","map","row","TableRow","TableCell","scope","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","target","value","ActionsComponent","GamePageContainer","this","pages_GamePage","Component","connect","state","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","title","hide","whiteSpace","drawerOpen","drawerClose","defineProperty","breakpoints","up","withRouter","_clsx3","_clsx4","setDrawerOpen","anchorEl","setAnchorEl","accountOpen","Boolean","history","auth","userCount","serverCount","handleAccountClose","CssBaseline","AppBar","clsx","Toolbar","edge","Menu_default","noWrap","aria-controls","aria-haspopup","currentTarget","AccountCircle_default","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","Drawer","paper","ChevronRight_default","ChevronLeft_default","Divider","List","ListItem","button","push","ListItemIcon","Badge","showZero","badgeContent","VideogameAsset_default","ListItemText","primary","Timeline_default","Grade_default","MainMenuContainer","_this$props","components_MainMenu","textAlign","card","details","flexDirection","flex","controls","paddingLeft","icon","ServerCard","server","control","item","xs","Card","CardContent","definition","PlayArrow_default","Block_default","ServerList","_ref2","name","paragraph","s","slider","ServerPage","idleServerCount","idleServers","filter","busyServers","gutterBottom","Slider","defaultValue","getAriaValueText","toString","valueLabelDisplay","step","marks","onChangeCommitted","desireIdleSrvCnt","initialState","undefined","dispatch","type","replaceUsers","replaceServers","idleServerNumber","react_router_dom","basename","containers_MainMenuContainer","react_router","from","to","path","ServerPageContainer","LeaderboardPage","reducer","combineReducers","arguments","action","find","u","toConsumableArray","store","createStore","rootReducer","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8e322531.chunk.js","sourcesContent":["import axios from 'axios';\nimport io from 'socket.io-client';\n\n\n\nconst matchServer = window.location.hostname.startsWith('localhost')\n                      ? 'http://localhost:8888'\n                      : window.location.host;\n\n\ninterface socketParam {\n  onUpdateUsers: (users: UserStore[]) => void,\n  onUpdateServers: (servers: ServerStore[]) => void,\n  onUpdateVars: (vars: VarStore) => void,\n}\n\nfunction ioConnect({ onUpdateUsers, onUpdateServers, onUpdateVars }: socketParam) {\n  const socket = io(matchServer, {\n    transports: [ 'websocket' ]\n  });\n\n  socket.on('connect', () => {\n    console.log('socket connected');\n  });\n\n  socket.on('disconnect', () => {\n    console.log('socket disconnect');\n  });\n\n  socket.on('users', (users: UserStore[]) => {\n    onUpdateUsers(users);\n  });\n  \n  socket.on('servers', (servers: ServerStore[]) => {\n    onUpdateServers(servers);\n  });\n  \n  socket.on('vars', (vars: VarStore) => {\n    onUpdateVars(vars);\n  })\n}\n\n\nconst instance = axios.create({\n  baseURL: `${matchServer}/api`,\n  timeout: 1000,\n  headers: {}\n});\n\nfunction requestMatching(username: string) {\n  return instance.post('/requestMatching', {\n    username\n  }, {\n    timeout: 40000\n  });\n}\n\nfunction desireIdleServerCount(number: number) {\n  return instance.post('/idleServerCount', {\n    number\n  });\n}\n\nfunction activeDediServer(addr: string) {\n  return axios.get(`http://${addr}/active`, {\n    timeout: 2000\n  });\n}\n\nfunction blockDediServer(addr: string) {\n  return axios.get(`http://${addr}/block`, {\n    timeout: 2000\n  });\n}\n\nexport default {\n  ioConnect,\n\n  requestMatching,\n  activeDediServer,\n  blockDediServer,\n  desireIdleServerCount\n}","import { Box, createStyles, Grid, IconButton, makeStyles, Theme } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport useInterval from '@use-it/interval';\nimport React, { useEffect } from 'react';\nimport Iframe from 'react-iframe';\nimport api from '../api';\nimport * as utils from '../utils';\n\n\nconst clientUrl = window.location.hostname.startsWith('localhost')\n                      ? 'http://localhost:8080'\n                      : `${window.location.host}/public/client`;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n    progress: {\n      // margin: theme.spacing(4),\n      // left: theme.spacing(4)\n    },\n  })\n);\n\n\nexport interface DialogTitleProps {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nfunction DialogTitle({ children, onClose }: DialogTitleProps) {\n  const classes = useStyles();\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n}\n\n\n\nexport interface SimpleDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nlet requestKey = '';\n\nfunction SimpleDialog(props: SimpleDialogProps) {\n  const classes = useStyles();\n  const { onClose, open } = props;\n  const [phase, setPhase] = React.useState('init'); // init, requested, responded\n  const [delay, setDelay] = React.useState(1000);\n  const [elapsedTime, setElapsedTime] = React.useState(0);\n  const [serverAddr, setServerAddr] = React.useState('');\n  \n  useEffect(() => {\n    // componentDidMount\n    let closeMe = (event: MessageEvent) => {\n      if (event.data === 'closeMe') {\n        console.log('closeMe');\n        handleClose();\n      }\n    }\n    window.addEventListener('message', closeMe);\n\n    return () => {\n      // componentWillUnmount\n      window.removeEventListener('message', closeMe);\n    }\n  }, []);\n\n  useInterval(() => {\n    setElapsedTime(elapsedTime + 1);\n  }, delay);\n\n  console.log({\n    open,\n    phase,\n    elapsedTime,\n    delay,\n    serverAddr,\n  })\n\n  if (open && phase === 'init') {\n    let key = utils.randomString(20);\n\n    requestKey = key;\n    setElapsedTime(0);\n    setDelay(1000);    \n    setPhase('requested');\n    \n    console.log('send request');\n    api.requestMatching('jaeseok').then(response => {\n      if (open && key === requestKey) {\n        setDelay(null as any);\n        setServerAddr(response.data.serverAddr || '');\n        setPhase('responded');\n        \n      }\n    });\n  }\n\n  function handleClose() {\n    onClose();\n\n    setElapsedTime(0);\n    setDelay(null as any);\n    setServerAddr('');\n    setPhase('init');\n\n    requestKey = '';\n    \n    console.log('called handleClose');\n  }\n\n  let content = null;\n\n  if (phase === 'init') {\n  } else if (phase === 'requested') {\n    content =\n      <div style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)' }}>\n        <CircularProgress size={70} />\n        <Typography variant=\"h2\" color=\"primary\" align='center'>{elapsedTime}</Typography>;\n        </div>;\n  } else if (phase === 'responded' && serverAddr === '') {\n    content =\n      <Typography variant=\"h1\" color=\"error\">\n        매칭이 실패했습니다.<br />\n        다시 시도해 주세요.\n        </Typography>;\n  } else {\n    content =\n      <Iframe\n        // url={`http://localhost:8080/?hostname=${\"13.124.158.138\"}%3A${32795}`}\n        // url={`http://localhost:8080/?hostname=${serverAddr.replace(':', '%3A')}`}\n        url={`http://${clientUrl}/?hostname=${serverAddr.replace(':', '%3A')}`}\n        width=\"600px\"\n        height=\"800px\"\n        frameBorder={0}\n        scrolling=\"no\"\n      />;\n  }\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      disableBackdropClick={true}\n      disableEscapeKeyDown={true}\n      open={open}\n      maxWidth=\"md\"\n      fullWidth={true}\n    >\n      <DialogTitle id=\"simple-dialog-title\" onClose={handleClose} >Tic Tac Toe {serverAddr}</DialogTitle>\n      <Box width=\"100%\" height={550} bgcolor=\"text.primary\" position='relative'>\n        <div style={{ zoom: 0.6 }}>\n          <div style={{ display: 'table', position: 'absolute', top: 0, left: 0, height: '100%', width: '100%' }}>\n            <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\n              <div style={{ marginLeft: 'auto', marginRight: 'auto', width: '100%' }}>\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  {content}\n                </Grid>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Box>\n    </Dialog>\n  );\n}\n\nfunction GameModal() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Start Game\n      </Button>\n      <SimpleDialog open={open} onClose={handleClose} />\n    </div>\n  );\n}\n\nexport default GameModal;","export function randomString(length: number) {\n  let result: string = '';\n  let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n}\n","import { createStyles, makeStyles, Theme, Typography, useTheme } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport React from 'react';\nimport GameModal from \"../components/GameModal\";\n\n\nconst useStyles1 = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexShrink: 0,\n      color: theme.palette.text.secondary,\n      marginLeft: theme.spacing(2.5),\n    },\n  }),\n);\n\ninterface TablePaginationActionsProps {\n  count: number;\n  page: number;\n  rowsPerPage: number;\n  onChangePage: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>, newPage: number) => void;\n}\n\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    accountPaper: {\n      padding: theme.spacing(3, 2)\n    },\n    tablePaper: {\n      width: '100%',\n      marginTop: theme.spacing(3),\n    },\n    table: {\n      minWidth: 500,\n    },\n    tableWrapper: {\n      overflowX: 'auto',\n    },\n  }),\n);\n\ninterface Props {\n  user: UserStore[];\n}\n\nfunction GamePage(props: Props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const rows = props.user.sort((a, b) => b.score - a.score);\n  // const rows: UserStore[] = [];\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  \n\n  function handleChangePage(\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\n    newPage: number,\n  ) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <main className={classes.content}>\n      <div className={classes.toolbar} />\n\n\n      <Paper className={classes.accountPaper}>\n        <Typography variant=\"h5\" component=\"h3\">\n          유저 정보\n        </Typography>\n        <Typography component=\"p\">\n          ID: {'jaeseok'}\n        </Typography>\n        <Typography component=\"p\">\n          Score: {1234}\n        </Typography>\n        <GameModal />\n      </Paper>\n\n      <Paper className={classes.tablePaper}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow key={row.username}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.username}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.score}</TableCell>\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n\n    </main>\n  );\n}\n\nexport default GamePage;","import React from 'react';\nimport { connect } from 'react-redux';\nimport GamePage from '../pages/GamePage';\n\ninterface Props {\n  users: UserStore[];\n}\n\nclass GamePageContainer extends React.Component<Props> {\n  render() {\n    const { users: user } = this.props;\n\n    return (\n      <GamePage user={user}/>\n    )\n  }\n};\n\nexport default connect(\n  (state: RootStore) => ({\n    users: state.users\n  }) as Props,\n)(GamePageContainer);","import { Badge, MenuItem } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport { createStyles, makeStyles, Theme, useTheme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Grade from '@material-ui/icons/Grade';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Timeline from '@material-ui/icons/Timeline';\nimport VideogameAsset from '@material-ui/icons/VideogameAsset';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      // marginRight: 36,\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\nexport default withRouter(function MainMenu(props: any) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [drawerOpen, setDrawerOpen] = React.useState(true);\n  // const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const accountOpen = Boolean(anchorEl);\n  const { history, auth, userCount, serverCount } = props;\n\n  function handleDrawerOpen() {\n    setDrawerOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setDrawerOpen(false);\n  }\n\n  // function handleAuthChange(event: React.ChangeEvent<HTMLInputElement>) {\n  //   setAuth(event.target.checked);\n  // }\n\n  function handleMenu(event: React.MouseEvent<HTMLElement>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleAccountClose() {\n    setAnchorEl(null);\n  }\n\n  return (\n    // <div className={classes.root}>\n    <div>\n      <CssBaseline />\n      {/* <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleAuthChange} aria-label=\"login switch\" />}\n          label={auth ? 'Logout' : 'Login'}\n        />\n      </FormGroup> */}\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: drawerOpen,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: drawerOpen,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            HoL 통합 클라이언트\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={accountOpen}\n                onClose={handleAccountClose}\n              >\n                <MenuItem onClick={handleAccountClose}>Profile</MenuItem>\n                <MenuItem onClick={handleAccountClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: drawerOpen,\n          [classes.drawerClose]: !drawerOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: drawerOpen,\n            [classes.drawerClose]: !drawerOpen,\n          }),\n        }}\n        open={drawerOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button key={'Games'} onClick={() => history.push('/game')}>\n            <ListItemIcon>\n              <Badge className={classes.margin} showZero badgeContent={userCount} max={99} color=\"primary\">\n                <VideogameAsset />\n              </Badge>\n            </ListItemIcon>\n            <ListItemText primary={'게임'} />\n          </ListItem>\n\n          <ListItem button key={'TrendingUp'} onClick={() => history.push('/server')}>\n            <ListItemIcon>\n              <Badge className={classes.margin} showZero badgeContent={serverCount} max={99} color=\"primary\">\n                <Timeline />\n              </Badge>\n            </ListItemIcon>\n            <ListItemText primary={'모니터링'} />\n          </ListItem>\n\n          <ListItem button key={'Grade'} onClick={() => history.push('/leaderboard')}>\n            <ListItemIcon>\n              <Badge className={classes.margin} color=\"primary\">\n                <Grade />\n              </Badge>\n            </ListItemIcon>\n            <ListItemText primary={'리더보드'} />\n          </ListItem>\n\n          {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n\n          ))} */}\n        </List>\n      </Drawer>\n      {/* <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n          ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum\n          facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\n          gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id\n          donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit\n          adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.\n          Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis\n          imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget\n          arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\n          donec massa sapien faucibus et molestie ac.\n        </Typography>\n        <Typography paragraph>\n          Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla\n          facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac\n          tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat\n          consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\n          vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In\n          hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et\n          tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin\n          nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas\n          accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\n        </Typography>\n      </main> */}\n    </div>\n  );\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport MainMenu from '../components/MainMenu';\n\ninterface Props {\n  auth: any;\n  userCount: number;\n  serverCount: number;\n}\n\nclass MainMenuContainer extends React.Component<Props> {\n  render() {\n    const { auth, userCount, serverCount } = this.props;\n\n    return (\n      <MainMenu auth={auth} userCount={userCount} serverCount={serverCount}/>\n    )\n  }\n};\n\n\nexport default connect(\n  (state: RootStore) => ({\n    auth: state.data,\n    userCount: state.users.length,\n    serverCount: state.servers.length\n  }) as Props,\n)(MainMenuContainer);"," import Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport BLockIcon from '@material-ui/icons/Block';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { useTheme } from '@material-ui/styles';\nimport React from 'react';\nimport api from '../api';\n\n\n\nconst useStyles1 = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n\n    card: {\n      display: 'flex',\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    controls: {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: theme.spacing(1),\n    },\n    icon: {\n      height: 20,\n      width: 20,\n    },\n  }),\n);\n\ninterface ServerCardProps {\n  server: ServerStore;\n  control: boolean;\n}\n\nfunction ServerCard({ server, control }: ServerCardProps) {\n  const classes = useStyles1();\n  const theme = useTheme();\n\n  function onClickActive() {\n    let promise = api.activeDediServer(server.addr);\n\n    promise.then((result) => {\n      console.log(result);\n    });\n  };\n\n  function onClickBlock() {\n    let promise = api.blockDediServer(server.addr);\n\n    promise.then((result) => {\n      console.log(result);\n    });\n  };\n\n  return (\n    <Grid item xs={3}>\n      {/* <Paper className={classes.paper}>{server.addr}</Paper> */}\n      <Card className={classes.card}>\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <Typography component=\"h5\" variant=\"h5\">\n              {server.addr}\n            </Typography>\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n              {server.definition}\n            </Typography>\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n              {server.state}\n            </Typography>\n          </CardContent>\n          {control &&\n            <div className={classes.controls}>\n              <IconButton aria-label=\"play\" onClick={onClickActive}>\n                <PlayArrowIcon className={classes.icon} />\n              </IconButton>\n              <IconButton aria-label=\"block\" onClick={onClickBlock}>\n                <BLockIcon className={classes.icon} />\n              </IconButton>\n            </div>\n          }\n        </div>\n      </Card>\n    </Grid>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\ninterface ServerListProps {\n  name: string,\n  servers: ServerStore[]\n}\n\nexport default function ServerList({ name, servers }: ServerListProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n\n      <Typography paragraph>\n        {name}({servers.length})\n      </Typography>\n\n      <Grid container spacing={1}>\n        <Grid container item xs={12} spacing={2}>\n          {\n            servers.map(s => (\n              <ServerCard key={s.addr} server={s} control={name === 'Idle'} />\n            ))\n          }\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import { createStyles, makeStyles, Theme, Slider, Typography } from '@material-ui/core';\nimport React from 'react';\nimport ServerList from '../components/ServerList';\nimport api from '../api';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    slider: {\n      width: 300,\n      margin: theme.spacing(1)\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n  }),\n);\n\ninterface Props {\n  servers: ServerStore[],\n  idleServerCount: number\n}\n\nexport default function ServerPage({ servers, idleServerCount }: Props) {\n  const classes = useStyles();\n  const idleServers = servers.filter(s => s.state === 'ready' || s.state === 'bind');\n  const busyServers = servers.filter(s => s.state === 'busy');\n\n  function valuetext(value: number) {\n    return value.toString();\n  }\n\n  function onChangeIdleServerNumber(event: any, number: number | number[]) {\n    console.log(number);\n    api.desireIdleServerCount(number as number);\n  }\n\n  return (\n    <main className={classes.content}>\n      <div className={classes.toolbar} />\n\n      <div className={classes.slider}>\n        <Typography id=\"discrete-slider\" gutterBottom>\n          대기 서버 개수 설정\n      </Typography>\n        <Slider\n          defaultValue={idleServerCount}\n          getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider\"\n          valueLabelDisplay=\"auto\"\n          step={5}\n          marks\n          min={5}\n          max={50}\n          value={idleServerCount}\n          onChangeCommitted={onChangeIdleServerNumber}\n        />\n      </div>\n\n      <div className={classes.margin}>\n        <ServerList key='active' name={'Active'} servers={busyServers} />\n\n      </div>\n      <div className={classes.margin}>\n        <ServerList key='idle' name={'Idle'} servers={idleServers} />\n      </div>\n\n    </main>\n  );\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport ServerPage from '../pages/ServerPage';\n\ninterface Props {\n  servers: ServerStore[];\n  idleServerCount: number;\n}\n\nclass GamePageContainer extends React.Component<Props> {\n  render() {\n    const { servers, idleServerCount } = this.props;\n\n    return (\n      <ServerPage servers={servers} idleServerCount={idleServerCount}/>\n    )\n  }\n};\n\nexport default connect(\n  (state: RootStore) => ({\n    servers: state.servers,\n    idleServerCount: state.data.desireIdleSrvCnt\n  }) as Props,\n)(GamePageContainer);","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { makeStyles, Theme, createStyles, Typography } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({    \n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\nexport default withRouter(function LeaderboardPage() {\n  const classes = useStyles();\n  \n  return (\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph>\n          Leaderboard Page\n        </Typography>\n        <Typography paragraph>\n          Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla\n          facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac\n          tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat\n          consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\n          vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In\n          hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et\n          tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin\n          nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas\n          accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\n        </Typography>\n      </main>\n  );\n});","export const setAuth = (username: DataSture['username']): DataAction =>\n  ({\n    type: \"data/AUTH\",\n    username\n  });\n\nexport const setDesireIdleSrvCnt = (number: DataSture['desireIdleSrvCnt']): DataAction =>\n  ({\n    type: \"data/DESIRE_IDLE_SRV_CNT\",\n    desireIdleSrvCnt: number\n  });\n\n\nconst initialState: DataSture = {\n  username: 'jaeseok',\n  desireIdleSrvCnt: 10\n};\n\nexport default function auth(state = initialState, action: DataAction): DataSture {\n  switch (action.type) {\n    case 'data/AUTH':\n      return {\n        username: action.username,\n        desireIdleSrvCnt: state.desireIdleSrvCnt\n      };\n\n    case 'data/DESIRE_IDLE_SRV_CNT':\n      return {\n        username: state.username,\n        desireIdleSrvCnt: action.desireIdleSrvCnt!\n      };\n\n    default:\n      return state;\n  }\n}","\n\n\nexport const addServer = (addr: ServerStore['addr'], definition: ServerStore['definition']): ServerAction =>\n({\n  type: \"server/ADD\",\n  addr,\n  definition,\n  state: \"ready\"\n});\n\nexport const updateServer = (addr: ServerStore['addr'], state: ServerStore['state']): ServerAction =>\n({\n  type: \"server/UPDATE\",\n  addr,\n  state\n});\n\nexport const removeServer = (addr: ServerStore['addr']): ServerAction =>\n({\n  type: \"server/REMOVE\",\n  addr,\n});\n\nexport const replaceServers = (servers: ServerStore[]): ServerAction => \n({\n  type: 'server/REPLACE',\n  servers\n});\n\n\nconst initialState: ServerStore[] = [];\n\nexport default function servers(state = initialState, action: ServerAction) {\n  switch (action.type) {\n    case 'server/REPLACE':\n      return action.servers as ServerStore[];\n\n    case \"server/ADD\":\n      return state.find(s => s.addr === action.addr)\n        ? state\n        : [...state, {\n          addr: action.addr!,\n          definition: action.definition!,\n          state: action.state!\n        }];\n\n    case \"server/UPDATE\":\n        let s = state.find(s => s.addr === action.addr)!;\n        return state.filter(s => s.addr !== action.addr).concat([{\n          addr: s.addr,\n          definition: s.definition,\n          state: action.state\n        }] as ServerStore[]);\n\n    case \"server/REMOVE\":\n        return state.filter(s => s.addr !== action.addr);\n\n    default:\n      return state;\n  }\n}","\nexport const addUser = (username: UserStore['username'], score: UserStore['score']): UserAction =>\n  ({\n    type: \"user/ADD\",\n    username,\n    score\n  });\n\n  export const removeUser = (username: UserStore['username']): UserAction =>\n  ({\n    type: \"user/REMOVE\",\n    username\n  });\n\n  export const replaceUsers = (users: UserStore[]): UserAction => \n  ({\n    type: 'users/REPLACE',\n    users\n  });\n\n  const initialState: UserStore[] = [];\n\n  export default function users(state = initialState, action: UserAction) {\n    switch (action.type) {\n      case 'users/REPLACE':\n        return action.users;\n\n      case \"user/ADD\":\n        return state.find(u => u.username === action.username)\n          ? state\n          : [...state, {\n            username: action.username!,\n            score: action.score!\n          }];\n  \n      case \"user/REMOVE\":\n        return state.filter(u => u.username !== action.username);\n  \n      default:\n        return state;\n    }\n  }\n  ","import { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport api from './api';\nimport GamePageContainer from './containers/GamePageContainer';\nimport MainMenuContainer from './containers/MainMenuContainer';\nimport ServerPageContainer from './containers/ServerPageContainer';\nimport LeaderboardPage from './pages/LeaderboardPage';\nimport { setDesireIdleSrvCnt } from './store/modules/data';\nimport { replaceServers } from './store/modules/servers';\nimport { replaceUsers } from './store/modules/users';\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface Props {\n  onUpdateUsers: (users: UserStore[]) => void,\n  onUpdateServers: (servers: ServerStore[]) => void,\n  onUpdateVars: (vars: VarStore) => void\n}\n\nfunction App(props: Props) {\n  const classes = useStyles();\n\n  useEffect(() => {\n    api.ioConnect({\n      onUpdateUsers: props.onUpdateUsers,\n      onUpdateServers: props.onUpdateServers,\n      onUpdateVars: props.onUpdateVars\n    });\n  });\n\n  return (\n    <div className={classes.root}>\n      <BrowserRouter basename={'/dashboard'}>\n        <MainMenuContainer />\n        <Redirect from=\"/\" to=\"/server\" />\n        <Route path=\"/game\" component={GamePageContainer} />\n        <Route path=\"/server\" component={ServerPageContainer} />\n        <Route path=\"/leaderboard\" component={LeaderboardPage} />\n      </BrowserRouter>\n    </div>\n\n  );\n}\n\nexport default connect(\n  undefined,\n  (dispatch) => {\n    return {\n      onUpdateUsers: (users: UserStore[]) => { dispatch(replaceUsers(users)) },\n      onUpdateServers: (servers: ServerStore[]) => { dispatch(replaceServers(servers)) },\n      onUpdateVars: (vars: VarStore) => { dispatch(setDesireIdleSrvCnt(vars.idleServerNumber)) }\n    }\n  }\n)(App);","import { combineReducers } from 'redux';\nimport data from './data';\nimport users from './users';\nimport servers from './servers';\n\nconst reducer = combineReducers({\n  data,\n  users,\n  servers\n});\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App';\nimport rootReducer from './store/modules';\nimport { addServer, removeServer, updateServer } from './store/modules/servers';\nimport { addUser, removeUser } from './store/modules/users';\n\n\n\nconst store = createStore(rootReducer);\n\n// console.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />,\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nfunction makeid(length: number) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst simulation = false;\n\nif (simulation) {\n  setInterval(() => {\n    Math.random() > 0.4 && store.dispatch(addUser(makeid(7), getRandomInt(100, 1000)));\n    store.getState().servers.filter(s => s.state === 'ready').length < 10 && store.dispatch(addServer(`57.31.126.${getRandomInt(122,125)}:` + getRandomInt(1000, 65535), 'sample:5'));\n  }, 1000);\n\n  setTimeout(() => {\n    setInterval(() => {\n      let { users } = store.getState();\n      if (users.length > 10) {\n        let idx = getRandomInt(0, users.length - 1);\n        store.dispatch(removeUser(users[idx].username));\n      }\n\n      let servers = store.getState().servers.filter(s => s.state === 'ready');\n      if (Math.random() > 0.4) {\n        let server = servers[getRandomInt(0, servers.length - 1)];\n        store.dispatch(updateServer(server.addr, 'busy'));\n      }\n\n      servers = store.getState().servers.filter(s => s.state === 'busy');\n      if (servers.length > 4 &&  Math.random() > 0.3) {\n        let server = servers[getRandomInt(0, servers.length - 1)];\n        store.dispatch(removeServer(server.addr));\n      }\n    }, 1000);\n  }, 5100);\n\n}"],"sourceRoot":""}